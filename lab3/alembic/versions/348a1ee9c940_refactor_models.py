"""Refactor models

Revision ID: 348a1ee9c940
Revises: 7bf661a1d662
Create Date: 2025-04-16 14:19:07.029881

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '348a1ee9c940'
down_revision: Union[str, None] = '7bf661a1d662'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('air_quality',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('air_quality_Carbon_Monoxide', sa.Float(), nullable=False),
    sa.Column('air_quality_Ozone', sa.Float(), nullable=False),
    sa.Column('air_quality_Nitrogen_dioxide', sa.Float(), nullable=False),
    sa.Column('air_quality_Sulphur_dioxide', sa.Float(), nullable=False),
    sa.Column('air_quality_PM2', sa.Float(), nullable=False),
    sa.Column('air_quality_PM10', sa.Float(), nullable=False),
    sa.Column('air_quality_us_epa_index', sa.Integer(), nullable=False),
    sa.Column('air_quality_gb_defra_index', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['weather_record.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    # ### end Alembic commands ###

    conn = op.get_bind()
    result = conn.execute(sa.text("""
    SELECT id,
           "air_quality_Carbon_Monoxide",
           "air_quality_Ozone",
           "air_quality_Nitrogen_dioxide",
           "air_quality_Sulphur_dioxide",
           "air_quality_PM2",
           "air_quality_PM10",
           "air_quality_us_epa_index",
           "air_quality_gb_defra_index"
    FROM weather_record
    """))
    for row in result:
        conn.execute(
            sa.text("""
                INSERT INTO air_quality (
                    user_id,
                    "air_quality_Carbon_Monoxide",
                    "air_quality_Ozone",
                    "air_quality_Nitrogen_dioxide",
                    "air_quality_Sulphur_dioxide",
                    "air_quality_PM2",
                    "air_quality_PM10",
                    "air_quality_us_epa_index",
                    "air_quality_gb_defra_index"
                ) VALUES (
                    :user_id, :air_quality_Carbon_Monoxide, :air_quality_Ozone, :air_quality_Nitrogen_dioxide,
                    :air_quality_Sulphur_dioxide, :air_quality_PM2, :air_quality_PM10, :air_quality_us_epa_index, :air_quality_gb_defra_index
                )
            """),
            {"user_id": row.id,
             "air_quality_Carbon_Monoxide": row.air_quality_Carbon_Monoxide,
             "air_quality_Ozone": row.air_quality_Ozone,
             "air_quality_Nitrogen_dioxide": row.air_quality_Nitrogen_dioxide,
             "air_quality_Sulphur_dioxide": row.air_quality_Sulphur_dioxide,
             "air_quality_PM2": row.air_quality_PM2,
             "air_quality_PM10": row.air_quality_PM10,
             "air_quality_us_epa_index": row.air_quality_us_epa_index,
             "air_quality_gb_defra_index": row.air_quality_gb_defra_index}
        )


    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('weather_record', 'air_quality_Nitrogen_dioxide')
    op.drop_column('weather_record', 'air_quality_us_epa_index')
    op.drop_column('weather_record', 'air_quality_PM10')
    op.drop_column('weather_record', 'air_quality_Carbon_Monoxide')
    op.drop_column('weather_record', 'air_quality_Sulphur_dioxide')
    op.drop_column('weather_record', 'air_quality_PM2')
    op.drop_column('weather_record', 'air_quality_gb_defra_index')
    op.drop_column('weather_record', 'air_quality_Ozone')
    # ### end Alembic commands ###




def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('weather_record', sa.Column('air_quality_Ozone', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_gb_defra_index', sa.INTEGER(), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_PM2', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_Sulphur_dioxide', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_Carbon_Monoxide', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_PM10', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_us_epa_index', sa.INTEGER(), autoincrement=False))
    op.add_column('weather_record', sa.Column('air_quality_Nitrogen_dioxide', sa.DOUBLE_PRECISION(precision=53), autoincrement=False))
    # ### end Alembic commands ###
    
    conn = op.get_bind()
    result = conn.execute(sa.text("""
    SELECT user_id,
           "air_quality_Carbon_Monoxide",
           "air_quality_Ozone",
           "air_quality_Nitrogen_dioxide",
           "air_quality_Sulphur_dioxide",
           "air_quality_PM2",
           "air_quality_PM10",
           "air_quality_us_epa_index",
           "air_quality_gb_defra_index"
    FROM air_quality
    """))
    
    for row in result:
        conn.execute(
            sa.text("""
                UPDATE weather_record
                SET 
                    "air_quality_Carbon_Monoxide" = :co,
                    "air_quality_Ozone" = :ozone,
                    "air_quality_Nitrogen_dioxide" = :no2,
                    "air_quality_Sulphur_dioxide" = :so2,
                    "air_quality_PM2" = :pm2,
                    "air_quality_PM10" = :pm10,
                    "air_quality_us_epa_index" = :epa,
                    "air_quality_gb_defra_index" = :gb
                WHERE id = :user_id
            """),
            {
                "user_id": row.user_id,
                "co": row.air_quality_Carbon_Monoxide,
                "ozone": row.air_quality_Ozone,
                "no2": row.air_quality_Nitrogen_dioxide,
                "so2": row.air_quality_Sulphur_dioxide,
                "pm2": row.air_quality_PM2,
                "pm10": row.air_quality_PM10,
                "epa": row.air_quality_us_epa_index,
                "gb": row.air_quality_gb_defra_index
            }
    )

    
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('air_quality')
    # ### end Alembic commands ###
